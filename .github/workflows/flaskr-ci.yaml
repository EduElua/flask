name: Build Flaskr App

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11.x'
          architecture: 'x64'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          # Install project file for flaskr app
          pip install -e examples/tutorial
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pwd
          cd examples/tutorial
          pytest
  # Build Docker image in a separate job so that it's not taited by cached python build/test files
  build-image:
    needs: tests
    permissions:
      # Required permission to push images with the built-in GITHUB_TOKEN
      packages: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Job vars and prep
        id: vars
        # Use bash string manipulation to create vars
        # Note runner.temp isn't available in job.env, so use it here
        run: |
          echo "SHA_SHORT=${GITHUB_SHA:0:10}" >> ${GITHUB_ENV}
          echo "REPO_LOWER_CASE=${GITHUB_REPOSITORY,,}" >> ${GITHUB_ENV}
          echo "CACHE=${{ runner.temp }}/.buildx-cache" >> ${GITHUB_ENV}
          echo "NEW_CACHE=${{ runner.temp }}/.buildx-cache-new" >> ${GITHUB_ENV}
          mkdir -p ${CACHE}
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Setup cache for Docker Buildx
        uses: actions/cache@v2
        with:
          path: ${{ env.CACHE }}
          key: flaskr-buildx-${{ github.ref_name }}
          restore-keys: |
            flaskr-buildx-main
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Docker image and push to GHCR
        uses: docker/build-push-action@v4
        with:
          context: examples/tutorial
          push: true
          # tags: "ghcr.io/${{ github.repository }}:${{ steps.vars.outputs.sha_short }}"
          tags: "ghcr.io/${{ env.REPO_LOWER_CASE }}:${{ env.SHA_SHORT }}"
          cache-from: type=local,src=${{ env.CACHE }}
          cache-to: type=local,dest=${{ env.NEW_CACHE }}
        # This ugly bit is necessary if you don't want your cache to grow forever
        # until it hits GitHub's limit of 5GB.
        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf $CACHE
          mv $NEW_CACHE $CACHE
